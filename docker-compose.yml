services:
  # ----------------------
  # WhatsApp Bot
  # ----------------------
  whatsapp-bot:
    build: .
    container_name: whatsapp_bot
    ports:
      - "${PORT}:${PORT}"
      - "127.0.0.1:5555:5555" # Prisma Studio     
    env_file:
      - .env
    restart: unless-stopped
    command: npm start
    depends_on:
      - bot-postgres
      - evolution-api
    networks:
      - bot-net

  # ----------------------
  # Bot Postgres
  # ----------------------
  bot-postgres:
    image: postgres:15-alpine
    container_name: bot_postgres
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "127.0.0.1:5433:5432"             
    volumes:
      - bot_postgres_data:/var/lib/postgresql/data
    networks:
      - bot-net

  # ----------------------
  # Evolution API
  # ----------------------
  evolution-api:
    image: evoapicloud/evolution-api:v2.3.4
    container_name: evolution_api
    restart: always
    depends_on:
      - evolution-redis
      - evolution-postgres
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - evolution_instances:/evolution/instances
    env_file:
      - .env
    networks:
      - bot-net
    expose:
      - "8080"

  # ----------------------
  # Evolution Redis
  # ----------------------
  evolution-redis:
    image: redis:8.2.2
    container_name: evolution_redis
    restart: always
    command: >
      redis-server --port 6379 --appendonly yes
    volumes:
      - evolution_redis:/data
    networks:
      - bot-net
    expose:
      - "6379"

  # ----------------------
  # Evolution Postgres
  # ----------------------
  evolution-postgres:
    image: postgres:15
    container_name: evolution_postgres
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${EVOLUTION_POSTGRES_DATABASE}
      - POSTGRES_USER=${EVOLUTION_POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${EVOLUTION_POSTGRES_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust
    command:
      - postgres
      - -c
      - max_connections=1000
      - -c
      - listen_addresses=*
    ports:
      - "127.0.0.1:5434:5432"
    volumes:
      - evolution_postgres_data:/var/lib/postgresql/data
    networks:
      - bot-net
    expose:
      - "5432"

# ----------------------
# Volumes
# ----------------------
volumes:
  bot_postgres_data:
  evolution_instances:
  evolution_redis:
  evolution_postgres_data:

# ----------------------
# Network
# ----------------------
networks:
  bot-net:
    driver: bridge